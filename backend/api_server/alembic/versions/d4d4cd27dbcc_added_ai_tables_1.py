"""Added ai tables 1

Revision ID: d4d4cd27dbcc
Revises: 
Create Date: 2025-08-30 22:09:07.536075

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "d4d4cd27dbcc"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "audit_entry",
        sa.Column("audit_entry_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("created_by", sa.String(length=100), nullable=False),
        sa.Column("created_date", sa.DateTime(), nullable=False),
        sa.Column("entity_set_name", sa.String(length=255), nullable=False),
        sa.Column("entity_type_name", sa.String(length=255), nullable=False),
        sa.Column("state", sa.Integer(), nullable=False),
        sa.Column("state_name", sa.String(length=100), nullable=False),
        sa.PrimaryKeyConstraint("audit_entry_id"),
    )
    op.create_table(
        "enum_types",
        sa.Column("enum_type_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("created_by", sa.String(length=100), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("updated_by", sa.String(length=100), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_by", sa.String(length=100), nullable=True),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.Column("version", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("enum_type_id"),
    )
    op.create_table(
        "ll_models",
        sa.Column("llm_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("llm_name", sa.String(length=255), nullable=False),
        sa.Column("context_window", sa.Integer(), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column(
            "cost_per_mill_input_token",
            sa.Numeric(precision=10, scale=6),
            nullable=True,
        ),
        sa.Column(
            "cost_per_mill_output_token",
            sa.Numeric(precision=10, scale=6),
            nullable=True,
        ),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("created_by", sa.String(length=100), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("updated_by", sa.String(length=100), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_by", sa.String(length=100), nullable=True),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.Column("version", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("llm_id"),
    )
    op.create_table(
        "mcp_servers",
        sa.Column("mcp_server_id", sa.String(length=255), nullable=False),
        sa.Column("server_name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("config", sa.String(length=1000), nullable=True),
        sa.Column("is_enable", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("created_by", sa.String(length=100), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("updated_by", sa.String(length=100), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_by", sa.String(length=100), nullable=True),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.Column("version", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("mcp_server_id"),
    )
    op.create_table(
        "settings",
        sa.Column("setting_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("setting_key", sa.String(length=100), nullable=False),
        sa.Column("setting_value", sa.String(length=1000), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("created_by", sa.String(length=100), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("updated_by", sa.String(length=100), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_by", sa.String(length=100), nullable=True),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.Column("version", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("setting_id"),
    )
    op.create_table(
        "users",
        sa.Column("user_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_name", sa.String(length=255), nullable=False),
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("password", sa.String(length=255), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("created_by", sa.String(length=100), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("updated_by", sa.String(length=100), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_by", sa.String(length=100), nullable=True),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.Column("version", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("user_id"),
        sa.UniqueConstraint("email"),
    )
    op.create_table(
        "audit_entry_property",
        sa.Column(
            "audit_entry_property_id", sa.Integer(), autoincrement=True, nullable=False
        ),
        sa.Column("audit_entry_id", sa.Integer(), nullable=False),
        sa.Column("property_name", sa.String(length=255), nullable=False),
        sa.Column("new_value", sa.Text(), nullable=True),
        sa.Column("old_value", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["audit_entry_id"],
            ["audit_entry.audit_entry_id"],
        ),
        sa.PrimaryKeyConstraint("audit_entry_property_id"),
    )
    op.create_table(
        "enum_values",
        sa.Column("enum_value_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("enum_type_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("value", sa.String(length=255), nullable=False),
        sa.Column("order", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("created_by", sa.String(length=100), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("updated_by", sa.String(length=100), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_by", sa.String(length=100), nullable=True),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.Column("version", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["enum_type_id"],
            ["enum_types.enum_type_id"],
        ),
        sa.PrimaryKeyConstraint("enum_value_id"),
    )
    op.create_table(
        "cloud_files",
        sa.Column("cloud_file_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("original_file_name", sa.String(length=255), nullable=False),
        sa.Column("stored_file_name", sa.String(length=255), nullable=True),
        sa.Column("file_path", sa.String(length=500), nullable=True),
        sa.Column("file_size", sa.Integer(), nullable=True),
        sa.Column("content_type", sa.String(length=50), nullable=True),
        sa.Column("storage_provider_id", sa.Integer(), nullable=True),
        sa.Column("bucket_name", sa.String(length=255), nullable=False),
        sa.Column("file_url", sa.String(length=1000), nullable=True),
        sa.Column("upload_status_id", sa.Integer(), nullable=True),
        sa.Column("checksum", sa.String(length=255), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("created_by", sa.String(length=100), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("updated_by", sa.String(length=100), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_by", sa.String(length=100), nullable=True),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.Column("version", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["storage_provider_id"],
            ["enum_values.enum_value_id"],
        ),
        sa.ForeignKeyConstraint(
            ["upload_status_id"],
            ["enum_values.enum_value_id"],
        ),
        sa.PrimaryKeyConstraint("cloud_file_id"),
    )
    op.create_table(
        "knowledge_bases",
        sa.Column(
            "knowledge_base_id", sa.Integer(), autoincrement=True, nullable=False
        ),
        sa.Column("knowledge_base_name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("knowledge_base_type_id", sa.Integer(), nullable=True),
        sa.Column("overlap_length", sa.Integer(), nullable=True),
        sa.Column("length_of_chunk", sa.Integer(), nullable=True),
        sa.Column("is_load_from_database", sa.Boolean(), nullable=False),
        sa.Column("tags", sa.String(length=500), nullable=True),
        sa.Column("embedding_llm_name_id", sa.Integer(), nullable=True),
        sa.Column("ranker_llm_name_id", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("created_by", sa.String(length=100), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("updated_by", sa.String(length=100), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_by", sa.String(length=100), nullable=True),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.Column("version", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["embedding_llm_name_id"],
            ["ll_models.llm_id"],
        ),
        sa.ForeignKeyConstraint(
            ["knowledge_base_type_id"],
            ["enum_values.enum_value_id"],
        ),
        sa.ForeignKeyConstraint(
            ["ranker_llm_name_id"],
            ["ll_models.llm_id"],
        ),
        sa.PrimaryKeyConstraint("knowledge_base_id"),
    )
    op.create_table(
        "chat_bots",
        sa.Column("chat_bot_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("avatar_id", sa.Integer(), nullable=True),
        sa.Column("chat_bot_name", sa.String(length=255), nullable=False),
        sa.Column("prompt_template", sa.Text(), nullable=True),
        sa.Column("greeting_message", sa.Text(), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("llm_name_id", sa.Integer(), nullable=True),
        sa.Column("temperature", sa.String(length=50), nullable=True),
        sa.Column("context_length", sa.Integer(), nullable=True),
        sa.Column("conversation_rounds", sa.Integer(), nullable=True),
        sa.Column("knowledge_base_id", sa.Integer(), nullable=True),
        sa.Column("mcp_server_ids", sa.String(length=500), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("created_by", sa.String(length=100), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("updated_by", sa.String(length=100), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_by", sa.String(length=100), nullable=True),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.Column("version", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["avatar_id"],
            ["cloud_files.cloud_file_id"],
        ),
        sa.ForeignKeyConstraint(
            ["knowledge_base_id"],
            ["knowledge_bases.knowledge_base_id"],
        ),
        sa.ForeignKeyConstraint(
            ["llm_name_id"],
            ["ll_models.llm_id"],
        ),
        sa.PrimaryKeyConstraint("chat_bot_id"),
    )
    op.create_table(
        "knowledge_base_files",
        sa.Column(
            "knowledge_base_file_id", sa.Integer(), autoincrement=True, nullable=False
        ),
        sa.Column("knowledge_base_id", sa.Integer(), nullable=False),
        sa.Column("cloud_file_id", sa.Integer(), nullable=True),
        sa.Column("processing_status", sa.Integer(), nullable=True),
        sa.Column("embedding_ids", sa.String(), nullable=True),
        sa.Column("extracted_text", sa.Text(), nullable=True),
        sa.Column("extraction_metadata", sa.JSON(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("created_by", sa.String(length=100), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("updated_by", sa.String(length=100), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_by", sa.String(length=100), nullable=True),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.Column("version", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["cloud_file_id"],
            ["cloud_files.cloud_file_id"],
        ),
        sa.ForeignKeyConstraint(
            ["knowledge_base_id"],
            ["knowledge_bases.knowledge_base_id"],
        ),
        sa.ForeignKeyConstraint(
            ["processing_status"],
            ["enum_values.enum_value_id"],
        ),
        sa.PrimaryKeyConstraint("knowledge_base_file_id"),
    )
    op.create_table(
        "knowledge_base_texts",
        sa.Column(
            "knowledge_base_file_id", sa.Integer(), autoincrement=True, nullable=False
        ),
        sa.Column("knowledge_base_id", sa.Integer(), nullable=False),
        sa.Column("header", sa.String(length=500), nullable=True),
        sa.Column("content", sa.Text(), nullable=False),
        sa.Column("content_type_id", sa.Integer(), nullable=True),
        sa.Column("embedding_processing_status", sa.Integer(), nullable=True),
        sa.Column("embedding_ids", sa.String(), nullable=True),
        sa.Column("outbound_links", sa.Text(), nullable=True),
        sa.Column("inbound_link_count", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("created_by", sa.String(length=100), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("updated_by", sa.String(length=100), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_by", sa.String(length=100), nullable=True),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.Column("version", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["content_type_id"],
            ["enum_values.enum_value_id"],
        ),
        sa.ForeignKeyConstraint(
            ["embedding_processing_status"],
            ["enum_values.enum_value_id"],
        ),
        sa.ForeignKeyConstraint(
            ["knowledge_base_id"],
            ["knowledge_bases.knowledge_base_id"],
        ),
        sa.PrimaryKeyConstraint("knowledge_base_file_id"),
    )
    op.create_table(
        "knowledge_base_urls",
        sa.Column(
            "knowledge_base_file_id", sa.Integer(), autoincrement=True, nullable=False
        ),
        sa.Column("knowledge_base_id", sa.Integer(), nullable=False),
        sa.Column("url", sa.String(length=500), nullable=False),
        sa.Column("domain_name", sa.String(length=255), nullable=True),
        sa.Column("page_title", sa.String(length=500), nullable=True),
        sa.Column("last_crawled_at", sa.DateTime(), nullable=True),
        sa.Column("crawl_frequency", sa.String(length=100), nullable=True),
        sa.Column("extracted_text", sa.Text(), nullable=True),
        sa.Column("extraction_metadata", sa.JSON(), nullable=True),
        sa.Column("response_code", sa.Integer(), nullable=True),
        sa.Column("response_header", sa.JSON(), nullable=True),
        sa.Column("content_length", sa.Integer(), nullable=True),
        sa.Column("content_type", sa.String(length=255), nullable=True),
        sa.Column("processing_status", sa.Integer(), nullable=True),
        sa.Column("embedding_ids", sa.String(), nullable=True),
        sa.Column("outbound_links", sa.Text(), nullable=True),
        sa.Column("inbound_link_count", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("created_by", sa.String(length=100), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("updated_by", sa.String(length=100), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_by", sa.String(length=100), nullable=True),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.Column("version", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["knowledge_base_id"],
            ["knowledge_bases.knowledge_base_id"],
        ),
        sa.ForeignKeyConstraint(
            ["processing_status"],
            ["enum_values.enum_value_id"],
        ),
        sa.PrimaryKeyConstraint("knowledge_base_file_id"),
    )
    op.create_table(
        "conversations",
        sa.Column("conversation_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("person_profile_id", sa.Integer(), nullable=True),
        sa.Column("conversation_title", sa.String(length=255), nullable=True),
        sa.Column("conversation_summary", sa.Text(), nullable=True),
        sa.Column("chat_bot_id", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("created_by", sa.String(length=100), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("updated_by", sa.String(length=100), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_by", sa.String(length=100), nullable=True),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.Column("version", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["chat_bot_id"],
            ["chat_bots.chat_bot_id"],
        ),
        sa.PrimaryKeyConstraint("conversation_id"),
    )
    op.create_table(
        "prompts",
        sa.Column("prompt_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("prompt_template", sa.Text(), nullable=False),
        sa.Column("place_holder", sa.String(length=255), nullable=True),
        sa.Column("chat_bot_id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("created_by", sa.String(length=100), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("updated_by", sa.String(length=100), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_by", sa.String(length=100), nullable=True),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.Column("version", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["chat_bot_id"],
            ["chat_bots.chat_bot_id"],
        ),
        sa.PrimaryKeyConstraint("prompt_id"),
    )
    op.create_table(
        "messages",
        sa.Column("message_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("person_profile_id", sa.Integer(), nullable=True),
        sa.Column("content", sa.Text(), nullable=False),
        sa.Column("content_type_id", sa.Integer(), nullable=True),
        sa.Column("conversation_id", sa.Integer(), nullable=False),
        sa.Column("user_feedback", sa.String(length=500), nullable=True),
        sa.Column("token_used", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("created_by", sa.String(length=100), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("updated_by", sa.String(length=100), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_by", sa.String(length=100), nullable=True),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.Column("version", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["conversation_id"],
            ["conversations.conversation_id"],
        ),
        sa.PrimaryKeyConstraint("message_id"),
    )
    op.create_table(
        "message_references",
        sa.Column(
            "message_reference_id", sa.Integer(), autoincrement=True, nullable=False
        ),
        sa.Column("message_id", sa.Integer(), nullable=False),
        sa.Column("doc_url", sa.String(length=500), nullable=True),
        sa.Column("page_num", sa.Integer(), nullable=True),
        sa.Column("file_name", sa.String(length=255), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("created_by", sa.String(length=100), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("updated_by", sa.String(length=100), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_by", sa.String(length=100), nullable=True),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.Column("version", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["message_id"],
            ["messages.message_id"],
        ),
        sa.PrimaryKeyConstraint("message_reference_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("message_references")
    op.drop_table("messages")
    op.drop_table("prompts")
    op.drop_table("conversations")
    op.drop_table("knowledge_base_urls")
    op.drop_table("knowledge_base_texts")
    op.drop_table("knowledge_base_files")
    op.drop_table("chat_bots")
    op.drop_table("knowledge_bases")
    op.drop_table("cloud_files")
    op.drop_table("enum_values")
    op.drop_table("audit_entry_property")
    op.drop_table("users")
    op.drop_table("settings")
    op.drop_table("mcp_servers")
    op.drop_table("ll_models")
    op.drop_table("enum_types")
    op.drop_table("audit_entry")
    # ### end Alembic commands ###
